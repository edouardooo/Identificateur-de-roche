import streamlit as st
from pyairtable import Table


def afficher_dico(table):
    st.title("üìò Dictionnaire des termes g√©ologiques")

    table = Table(API_TOKEN, BASE_ID, TABLE_NAME)
    records = table.all(formula="IF({valid√©}, TRUE(), FALSE())")

    # Construction de la liste des entr√©es
    termes = []
    for rec in records:
        fields = rec["fields"]
        if "terme" in fields and "d√©finition" in fields:
            termes.append({
                "terme": fields["terme"],
                "definition": fields["d√©finition"]
            })

    # Tri alphab√©tique
    termes.sort(key=lambda x: x["terme"].lower())

    # Barre de recherche
    search = st.text_input("üîç Rechercher un terme").strip().lower()

    # Navigation par lettre
    lettres = sorted({t["terme"][0].upper() for t in termes if t["terme"]})
    lettre_sel = st.selectbox("üî† Filtrer par lettre", options=["Toutes"] + lettres)

    # Filtrage
    filtr√©s = [
        t for t in termes
        if (search in t["terme"].lower())
        and (lettre_sel == "Toutes" or t["terme"].upper().startswith(lettre_sel))
    ]

    # Affichage
    if not filtr√©s:
        st.info("Aucun terme trouv√©.")
    else:
        for t in filtr√©s:
            st.markdown(f"### {t['terme']}")
            st.markdown(t["definition"])
            st.markdown("---")


def sugestions_dico(table):
    table = Table(API_TOKEN, BASE_ID, TABLE_NAME)
    
    st.title("‚úçÔ∏è Proposer un terme g√©ologique")

    with st.form("proposition_terme"):
        terme = st.text_input("Terme")
        definition = st.text_area("D√©finition")
        image_url = st.text_input("Lien vers une image (optionnel)")
        propose_par = st.text_input("Ton nom ou email")

        submitted = st.form_submit_button("Envoyer la proposition")

        if submitted:
            if terme and definition:
                table.create({
                    "terme": terme,
                    "d√©finition": definition,
                    "propos√©_par": propose_par,
                    "image": [{"url": image_url}] if image_url else [],
                    "valid√©": False
                })
                st.success("‚úÖ Proposition envoy√©e ! Elle sera ajout√©e si elle est valid√©e.")
            else:
                st.warning("‚ö†Ô∏è Merci de remplir au moins le terme et la d√©finition.")


# Connexion Airtable globale
API_TOKEN = st.secrets["airtable_token"]
BASE_ID = st.secrets["base_id"]
TABLE_NAME = st.secrets["table_name"]
table = Table(API_TOKEN, BASE_ID, TABLE_NAME)

